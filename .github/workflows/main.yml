name: BilyabitsRDP (v10.1)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # every 6 hours (UTC)

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 1440  # 24 hours max

    env:
      TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
      RESTART_TOKEN: ${{ secrets.RESTART_TOKEN }}
      USERNAME: bilyabits
      PASSWORD: Cj123
      VERSION: "v10.1"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure RDP and firewall
        shell: pwsh
        run: |
          Write-Host "Enable RDP and firewall."
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
            -Name fDenyTSConnections -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Create RDP user if missing
        shell: pwsh
        run: |
          $user = $env:USERNAME
          $pass = $env:PASSWORD
          if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
            net user $user $pass /add
          }
          Add-LocalGroupMember -Group "Administrators" -Member $user -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user -ErrorAction SilentlyContinue
          echo "RDP_CREDS=User: $user | Password: $pass" >> $env:GITHUB_ENV

      - name: Install Tailscale if missing
        shell: pwsh
        run: |
          $exe = "C:\Program Files\Tailscale\tailscale.exe"
          if (-not (Test-Path $exe)) {
            Write-Host "Installing Tailscale..."
            Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe" -OutFile "tailscale-setup.exe"
            Start-Process -FilePath ".\tailscale-setup.exe" -ArgumentList "/quiet" -Wait
            Remove-Item .\tailscale-setup.exe -Force -ErrorAction SilentlyContinue
          } else {
            Write-Host "Tailscale already installed."
          }

      - name: Start Tailscale service
        shell: pwsh
        run: |
          Start-Service Tailscale
          Start-Service Tailscale IPN Service

      - name: Restore previous Tailscale state (ignore on first run)
        shell: pwsh
        continue-on-error: true
        run: |
          Write-Host "Restoring previous Tailscale state if available..."
          $statePath = "$env:USERPROFILE\AppData\Local\Tailscale\tailscaled.state"
          if (Test-Path $statePath) {
            Write-Host "Tailscale state found."
          } else {
            Write-Host "No previous state found. Skipping restore."
          }

      - name: Connect Tailscale
        shell: pwsh
        run: |
          & "C:\Program Files\Tailscale\tailscale.exe" up --authkey $env:TAILSCALE_AUTH_KEY --hostname "WinRDP-${{ env.VERSION }}" --accept-routes
          $ip = (& "C:\Program Files\Tailscale\tailscale.exe" ip -4)[0]
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      - name: Log full RDP info (with IP)
        shell: pwsh
        run: |
          $user = $env:USERNAME
          $pass = $env:PASSWORD
          $ip = $env:TAILSCALE_IP
          $ver = $env:VERSION
          $log = "RDP Version: $ver`nUser: $user`nPassword: $pass`nTailscale IP: $ip`nTimestamp: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
          Write-Host "`n--- RDP SESSION INFO ---`n$log`n------------------------"
          Set-Content -Path "RDP_LOG_${ver}.txt" -Value $log

      - name: Schedule auto-restart
        shell: pwsh
        run: |
          Write-Host "Auto restart triggered every 6 hours."
          Write-Host "Session stable. Waiting for timeout or next schedule."
